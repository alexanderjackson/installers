#!/bin/bash
(
#
# brimir-on-debian-jessie-amd64
#
# Copyright 2015, Alexander Jackson <alexander.jackson@jackson-it.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Uncomment to run in verbose mode
set -x


# -------------------------------------------
# Vars
# -------------------------------------------
BRIMIR_ADMIN=alexander.jackson@jackson-it.de
# Dont touch the next variables unless you know what you are doing
BRIMIR_OWNER=brimir
BRIMIR_DB=brimir
BRIMIR_MAIL_DEFAULT_FROM=brimir@$(hostname -d)
BRIMIR_MAIL_DEFAULT_URL=$(hostname -f)
BRIMIR_HOSTNAME=$(hostname -f)

export DEBIAN_FRONTEND=noninteractive
OS=$(lsb_release -c | awk '{ print $2 }')
# Get architecture
if [ $(getconf LONG_BIT) = "64" ]
  then
    ARCH=x86-64
  else
    ARCH=i386
fi
DEB_ARCH=$(dpkg --print-architecture)


# -------------------------------------------
# Functions
# -------------------------------------------
function print-system-infos {
# -------------------------------------------
# Log system infos
# -------------------------------------------
echo Timestamp
echo -----------------------------------------------------------------
date
echo
echo
echo Hostnames
echo -----------------------------------------------------------------
echo "${BRIMIR_HOSTNAME},$(hostname -s),$(hostname -d),$(hostname -i)"
echo
echo
echo Content of /etc/hosts
echo -----------------------------------------------------------------
cat /etc/hosts
echo
echo
echo OS Architecture
echo -----------------------------------------------------------------
echo ${ARCH}
echo
echo
echo Debian Package Architecture
echo -----------------------------------------------------------------
echo ${DEB_ARCH}
echo
echo
echo Active Kernel
echo -----------------------------------------------------------------
uname -a
echo
echo
echo Network Interfaces
echo -----------------------------------------------------------------
ifconfig -a
echo
echo
echo IP Addresses
echo -----------------------------------------------------------------
ip addr show
echo
echo
echo DNS Servers
echo -----------------------------------------------------------------
cat /etc/resolv.conf
echo
echo
echo Routes
echo -----------------------------------------------------------------
route -n
echo
echo
echo Content of /etc/network/interfaces
echo -----------------------------------------------------------------
cat /etc/network/interfaces
echo
echo
echo Debian Version
echo -----------------------------------------------------------------
cat /etc/debian_version
echo
echo
find /etc/apt/ -type f | grep -v gpg | while read line ; do echo ; \
    echo Content of $line ; \
    echo ----------------------------------------------------------------- ; \
    cat $line ; \
	echo ;
done
echo
echo
echo Installed packages
echo -----------------------------------------------------------------
dpkg -l
echo
echo
echo Process List
echo -----------------------------------------------------------------
ps axu
echo
echo
echo Local user accounts
echo -----------------------------------------------------------------
cat /etc/passwd
}


# -------------------------------------------
# Brimir on Debian (64bit)
# -------------------------------------------
clear
cat <<EOF

  Install Brimir Helpdesk on Debian 8 with NGINX and MariaDB
  -----------------------------------------------------------------
  This installer is meant to run on a freshly installed machine
  only. If you run it on a production server things can and
  probably will go terrible wrong and you will loose valuable
  data!
  For questions or suggestions please contact me at
  alexander.jackson@jackson-it.de
  -----------------------------------------------------------------
  Hit return to proceed or CTRL-C to abort.

EOF
read dummy
clear


# -------------------------------------------
# Start the magic
# -------------------------------------------
print-system-infos


# -------------------------------------------
# Ensure we are running the installer as root
# -------------------------------------------
if [[ $EUID -ne 0 ]]; then
  echo "  Aborting because you are not root" ; exit 1
fi


# -------------------------------------------
# Abort if user brimir exists
# -------------------------------------------
if getent passwd ${BRIMIR_OWNER} > /dev/null 2>&1 ;
then
  echo "  Aborting because user ${BRIMIR_OWNER} already exist" ; exit 1
fi


# -------------------------------------------
# Abort if directory /opt/brimir/ exists
# -------------------------------------------
if [[ -d "/opt/brimir/" ]] ;
then
  echo "  Aborting because directory /opt/brimir/ already exist" ; exit 1
fi


# -------------------------------------------
# Update System
# -------------------------------------------
apt-get update
apt-get dist-upgrade -y


# -------------------------------------------
# Additional requirements
# -------------------------------------------
apt-get install sudo ntp less htop pwgen curl openssl unattended-upgrades -y


# -------------------------------------------
# ensure correct time is set
# -------------------------------------------
ntpd -gq


# -------------------------------------------
# Security programs
# -------------------------------------------
apt-get install ufw fail2ban -y


# -------------------------------------------
# Activate firewall
# -------------------------------------------
for i in ssh smtp http https ; do ufw allow $i ; done
yes | ufw enable


# -------------------------------------------
# Postfix
# -------------------------------------------
debconf-set-selections << EOF
postfix postfix/root_address    string
postfix postfix/rfc1035_violation       boolean false
postfix postfix/mydomain_warning        boolean
postfix postfix/mynetworks      string  127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
postfix postfix/mailname        string  ${BRIMIR_HOSTNAME}
postfix postfix/tlsmgr_upgrade_warning  boolean
postfix postfix/recipient_delim string  +
postfix postfix/main_mailer_type        select  Internet Site
postfix postfix/destinations    string  ${BRIMIR_HOSTNAME}, localhost.$(hostname -d), localhost,
postfix postfix/retry_upgrade_warning   boolean
# Install postfix despite an unsupported kernel?
postfix postfix/kernel_version_warning  boolean
postfix postfix/not_configured  error
postfix postfix/sqlite_warning  boolean
postfix postfix/mailbox_limit   string  0
postfix postfix/relayhost       string
postfix postfix/procmail        boolean false
postfix postfix/bad_recipient_delimiter error
postfix postfix/protocols       select  all
postfix postfix/chattr  boolean false
EOF

apt-get install postfix -y

dpkg-reconfigure postfix


# -------------------------------------------
# Unattended upgrades
# -------------------------------------------
debconf-set-selections <<EOF
unattended-upgrades     unattended-upgrades/enable_auto_updates boolean true
EOF

apt-get install unattended-upgrades -y

dpkg-reconfigure unattended-upgrades

cat >> /etc/apt/apt.conf.d/50unattended-upgrades <<EOF

// Automatically upgrade packages from these (origin:archive) pairs
Unattended-Upgrade::Allowed-Origins {
  // To check "Origin:" and "Suite:", you could use e.g.:
  // grep "Origin\|Suite" /var/lib/apt/lists/oss-binaries.phusionpassenger.com*
  "Phusion:stable";
};
EOF


# -------------------------------------------
# Brimir Dependencies
# -------------------------------------------
#apt-get install apt-transport-https bundler ca-certificates git rake ruby ruby-dev ruby-execjs ruby-mysql2 zlib1g-dev -y
apt-get install apt-transport-https bundler ca-certificates git ruby ruby-dev ruby-execjs ruby-mysql2 zlib1g-dev -y


# -------------------------------------------
# Add Phusion Passenger Sources
# -------------------------------------------
cat > /etc/apt/sources.list.d/passenger.list <<EOF
# Phusion Passenger Repository
deb https://oss-binaries.phusionpassenger.com/apt/passenger jessie main
EOF

apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 561F9B9CAC40B2F7

chown root: /etc/apt/sources.list.d/passenger.list
chmod 600 /etc/apt/sources.list.d/passenger.list


# -------------------------------------------
# NGINX
# -------------------------------------------
cat > /etc/apt/sources.list.d/nginx.list <<EOF
# NGINX Repository
deb http://nginx.org/packages/mainline/debian/ ${OS} nginx
deb-src http://nginx.org/packages/mainline/debian/ ${OS} nginx
EOF
wget -O - http://nginx.org/packages/keys/nginx_signing.key | apt-key add -

chown root: /etc/apt/sources.list.d/nginx.list
chmod 600 /etc/apt/sources.list.d/nginx.list

apt-get update
apt-get upgrade -y
apt-get install nginx nginx-extras passenger -y

rm /etc/nginx/conf.d/*

cat > /etc/nginx/conf.d/brimir.conf <<'EOF'
server {
  listen       80;
  server_name  "";
  return 301 https://$http_host$request_uri;
}

server {
      listen 443 spdy;
      server_name  "";

      ssl on;
      ssl_certificate /etc/nginx/ssl/brimir.crt;
      ssl_certificate_key /etc/nginx/ssl/brimir.key;

      passenger_enabled on;
      passenger_app_env production;
      root /opt/brimir/public;

      access_log      /var/log/nginx/brimir.access.log;
      error_log       /var/log/nginx/brimir.error.log;
}
EOF


# -------------------------------------------
# Create self-signed certificate for NGINX
# -------------------------------------------
mkdir /etc/nginx/ssl

openssl genrsa -out /etc/nginx/ssl/brimir.key 4096

cat > /etc/nginx/ssl/brimir.cnf <<EOF
[req]
distinguished_name = req_distinguished_name
x509_extensions = v3_ca
prompt = no

[req_distinguished_name]
countryName = DE
stateOrProvinceName = Bayern
localityName = Wiesentheid
organizationName = Jackson IT
organizationalUnitName = Support
emailAddress = postmaster@$(hostname -d)
commonName = ${BRIMIR_HOSTNAME}

[v3_ca]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
basicConstraints = CA:TRUE
subjectAltName = @alt_names

[alt_names]
DNS.1 = localhost
DNS.2 = ${BRIMIR_HOSTNAME}
DNS.3 = $(hostname -s)
IP.1 = 127.0.0.1
IP.2 = $(hostname -i)
EOF

openssl req -new -x509 -key /etc/nginx/ssl/brimir.key -out /etc/nginx/ssl/brimir.crt -days 10950 -config /etc/nginx/ssl/brimir.cnf -sha256


# -------------------------------------------
# Create optimized nginx.conf
# -------------------------------------------
cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup

cat > /etc/nginx/nginx.conf <<'ENDOFFILE'
user www-data www-data;
worker_processes 4;
events {
  worker_connections 8096;
  multi_accept on;
  use epoll;
}
pid /var/run/nginx.pid;
worker_rlimit_nofile 40000;
http {
  server_tokens off;
  server_names_hash_bucket_size 128;
  client_max_body_size 50M;
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log warn;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  client_body_timeout 12;
  client_header_timeout 12;
  keepalive_timeout 15;
  send_timeout 10;
  gzip on;
  gzip_vary on;
  gzip_proxied expired no-cache no-store private auth any;
  gzip_comp_level 9;
  gzip_min_length 10240;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/xml font/woff2;
  gzip_disable "MSIE [1-6].";
  passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
  passenger_ruby /usr/bin/passenger_free_ruby;
  include /etc/nginx/conf.d/*.conf;
  map $scheme $php_https {
    default off;
    https on;
  }
  include perfect-forward-secrecy.conf;
}
ENDOFFILE


# -------------------------------------------
# Setup perfect forward secrecy
# -------------------------------------------
openssl dhparam -dsaparam -out /etc/nginx/dh4096.pem 4096

cat > /etc/nginx/perfect-forward-secrecy.conf <<'EOF'
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA";
ssl_dhparam dh4096.pem;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;
EOF


# -------------------------------------------
# Fix NGINX worker_processes to number of CPU cores
# -------------------------------------------
CPUS=$(cat /proc/cpuinfo | grep processor | wc | awk '{ print $1 }')
eval "sed -i 's/worker_processes.*/worker_processes  $CPUS;/g' /etc/nginx/nginx.conf"

systemctl restart nginx


# -------------------------------------------
# MariaDB
# -------------------------------------------
apt-get install mariadb-server libmariadbd-dev libmysqlclient-dev -y

SQLROOTPW=$(pwgen 14 1)

mysqladmin -u root password ${SQLROOTPW}

cat > /root/.my.cnf <<EOF
[client]
user=root
password=${SQLROOTPW}
EOF

chmod 600 /root/.my.cnf


# -------------------------------------------
# Brimir
# -------------------------------------------
adduser --gecos "${BRIMIR_OWNER}" ${BRIMIR_OWNER} --disabled-password --no-create-home
cd /opt/
git clone https://github.com/ivaldi/brimir.git


# -------------------------------------------
# Brimir DB
# -------------------------------------------
BRIMIR_DB_PW=$(pwgen 14 1)

cat > /opt/brimir/.my.cnf <<EOF
[client]
user=brimir
password=${BRIMIR_DB_PW}
EOF

chmod 600 /opt/brimir/.my.cnf

# Create database
mysql -e "CREATE DATABASE IF NOT EXISTS \`${BRIMIR_DB}\` character set = 'utf8';"

cat > /opt/brimir/config/database.yml <<EOF
# SQLite version 3.x
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem 'sqlite3'
development:
  adapter: sqlite3
  database: db/development.sqlite3
  pool: 5
  timeout: 5000

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  adapter: sqlite3
  database: db/test.sqlite3
  pool: 5
  timeout: 5000

production:
  adapter: mysql2
  host: localhost
  database: ${BRIMIR_OWNER}
  user: root
  password: ${SQLROOTPW}
EOF

sed -i '/^end/d' /opt/brimir/config/environments/production.rb

cat >> /opt/brimir/config/environments/production.rb <<EOF

  config.action_mailer.default_options = { from: '${BRIMIR_MAIL_DEFAULT_FROM}' }
  config.action_mailer.default_url_options = { host: '${BRIMIR_MAIL_DEFAULT_URL}' }
end
EOF

chown -R ${BRIMIR_OWNER}.${BRIMIR_OWNER} /opt/brimir/


# -------------------------------------------
# Initialize Brimir database and create admin
# -------------------------------------------
BRIMIR_ADMIN_PW=$(pwgen 14 1)

cd /opt/brimir/

su brimir -c "bundle install --without sqlite postgresql development test --deployment"
su brimir -c 'sed -i "s/<%= ENV\[\"SECRET_KEY_BASE\"\] %>/$(bin/rake secret)/g" config/secrets.yml'
#su brimir -c "bundle exec rake db:schema:load RAILS_ENV=production"
#su brimir -c "bundle exec rake assets:precompile RAILS_ENV=production"
su brimir -c "rake db:schema:load RAILS_ENV=production"
su brimir -c "rake assets:precompile RAILS_ENV=production"


# Create initial admin user
su brimir -c "bin/rails console production <<EOF
u = User.new({ email: '${BRIMIR_ADMIN}', password: '${BRIMIR_ADMIN_PW}', password_confirmation: '${BRIMIR_ADMIN_PW}' }); u.agent = true; u.save!
EOF"


# -------------------------------------------
# Create Brimir mail import alias
# -------------------------------------------
cat >> /etc/aliases <<EOF
${BRIMIR_OWNER}: "|/bin/bash /opt/brimir/script/post-mail https://${BRIMIR_HOSTNAME}/tickets.json"
EOF

newaliases

sed -i 's/curl -s/curl -k -s/' /opt/brimir/script/post-mail


# -------------------------------------------
# Final report
# -------------------------------------------
cat > /opt/brimir/$(basename ${0})_report.log <<EOF

  Your Brimir server
  -----------------------------------------------------------------
  Brimir Admin:                ${BRIMIR_ADMIN}
  Brimir Admin Password:       ${BRIMIR_ADMIN_PW}
  Server Address:              https://${BRIMIR_HOSTNAME}

  Brimir Install Dir:          /opt/brimir
  Root DB Credentials:         Check /root/.my.cnf

  Switch to Brimir user with:  su ${BRIMIR_OWNER} -s /bin/bash

  Forward incoming emails to ${BRIMIR_OWNER}@$(hostname -d)...


  Next you should manually complete the following steps
  -----------------------------------------------------------------
  1) If this server is behind a firewall, you need to ensure that
     tcp port 443 for the NGINX reverse proxy is open. Optionally
     you may also open tcp port 80 which redirects all unencrypted
     http traffic to the encrypted https port.
  2) Make sure the local Postfix mail server can process in- and outgoing mails.


  Optional steps
  -----------------------------------------------------------------
  1) Setup NGINX with official SSL certificate.
  2) Implement a backup routine for your Brimir server.


  Brimir support options
  -----------------------------------------------------------------
  For free community support visit:   https://github.com/ivaldi/brimir/issues
  For paid commercial support visit:  https://ivaldi.nl


  Debug infos
  -----------------------------------------------------------------
  If the installation fails for any reason, review
  /root/$(basename ${0})_installation.log


  Issues I have noticed
  -----------------------------------------------------------------
  1) Brimir DB user seems to be hardcoded to "root". This shouldn't be like that...
  2) ============= WARNING FROM mysql2 =============
     The options :user, :pass, :hostname, :dbname, :db, and :sock will be deprecated at some point in the future.
     Instead, please use :username, :password, :host, :port, :database, :socket, :flags for the options.


  Contribute
  -----------------------------------------------------------------
  Please contact alexander.jackson@jackson-it.de
  for bugs or suggestions about this installer. Thank you!
  This report is also saved to /opt/brimir/$(basename ${0})_report.log

EOF

chmod 600 /opt/brimir/$(basename ${0})_report.log

cat /opt/brimir/$(basename ${0})_report.log

) 2>&1 | tee /root/$(basename ${0})_installation.log
chmod 600 /root/$(basename ${0})_installation.log
